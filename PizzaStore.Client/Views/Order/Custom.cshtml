@model PizzaStore.Client.Models.PizzaViewModel
@{
    ViewData["Title"] = "Custom Order Page";
    Layout = "~/Views/Order/_LayoutOrder.cshtml";
}
@* 
security measures to be aware of
CORS - cross-origin resource sharing, ability to share between domains -->similar to whitelisting
XSS - cross-site scripting , man-in-the-middle-->similar to blacklisting                                                    
CSRF* - cross-site request forgery, phishing-->similar to blacklisting
*@
@ViewBag.UserName
@* HTML WAY *@
@using(Html.BeginForm("PlaceOrder", "Order", null, FormMethod.Post))
{
//<form action="/order/placeorder" method="post">
  @Html.AntiForgeryToken();
  
  @foreach (var crust in @Model.Crusts)
  {
      <input type="radio" name="crust" id="@crust.Name" value="@crust.Name" data-val="true" data-val-required="needed"></input>
      <label for="@crust.Name">@crust.Name</label>
      @Html.ValidationMessageFor(m => m.Crust)
  }

  <select name="size" id="">
    @foreach (var size in @Model.Sizes)
    {
        <option value="@size.Name">@size.Name</option>
    }
  </select>
  @Html.ValidationMessageFor(m => m.Size)

<table class="table">
        <tr>
            <th>Toppings</th>
        </tr>
          <tr>
            <td>
                @for (var i = 0; i < @Model.Toppings.Count(); i ++)
                  {
                      @* <option value="@Model.Toppings[i]">@Model.Toppings[i].Name</option>
                      @Html.HiddenFor(it => Model.Toppings[i].Name) *@
                      @Html.DisplayFor(m => @Model.Toppings[i].Name)
                      @Html.CheckBoxFor(m => @Model.Toppings[i].IsChecked, new {name = "selectedtoppings2", value = @Model.Toppings[i].Name}) 
                      @Html.HiddenFor(m => @Model.SelectedToppings2)
                  }
              @* <option value="null">None</option> *@
              @Html.ValidationMessageFor(m => m.Toppings)
            </td>
          </tr>
</table>
     <button type="submit">place order</button>

 //  @* @foreach (var topping in @Model.Toppings)
//  {
//      <input type="checkbox" name="selectedtoppings" id="selectedtoppings" value="@topping.Name"></input>
      //<label for="selectedtoppings">@topping.Name</label>
 //     @Html.ValidationMessageFor(m => m.SelectedToppings)
//  } 
  // @Html.HiddenFor(it => Model.Toppings[i].Id)
   //                 @Html.DisplayFor(it => @Model.Toppings[i].Name)
//                    @Html.CheckBoxFor(it => @Model.Toppings[i].IsChecked)  *@

 
//</form>
}

 @* HTML HELPER WAY
@using(Html.BeginForm("PlaceOrder", "Order", null, FormMethod.Post))
{
  @Html.AntiForgeryToken();
  foreach (var crust in Model.Crusts)
  {
      @Html.RadioButtonFor(m => m.Crust, crust.Name);
      @Html.LabelFor(m => m.Crust);
      @Html.ValidationMessageFor(m => m.Crust)
  }
  
  @Html.DropDownListFor(m => m.Sizes, new SelectList(Model.Sizes));
  @Html.ValidationMessageFor(m => m.Size)

  foreach (var topping in Model.Toppings)
  {
      @Html.CheckBoxFor(m => m.SelectedTopping, new { name = "SelectedToppings", value = topping});
  }

  <button type="submit">place order</button>
} *@

@*
TAG HELPER WAY 
<form asp-action="placeorder" method="post">
  @foreach (var crust in @Model.Crusts)
  {
      <input type="radio" asp-for="@Model.Crust" value="@crust.Name">
  }

  <select asp-for="@Model.Size">
    @foreach (var size in @Model.Sizes)
    {
        <option value="@size.Name">@size.Name</option>
    }
  </select>
</form> 
*@

@* <a href="/order">main order page</a>
<a asp-controller="order" asp-action="main">user homepage</a> *@

 @* @for (var i = 0; i < @Model.Toppings.Count(); i++)
        {
            <tr>
                <td>
                  @* <input type="checkbox" name="checkboxtoppingmodel" id="@Model.Toppings[i].Name" value="@Model.Toppings[i].Name">
                  <label for="@Model.Toppings[i].Name">@Model.Toppings[i].Name</label> *@